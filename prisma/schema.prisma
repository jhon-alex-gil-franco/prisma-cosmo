// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum Enum_RoleName {
    Admin
    Dev
}

model Client {
    id        String    @id @default(cuid())
    name      String
    projects  Project[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Page {
    id        String   @id @default(cuid())
    name      String
    path      String
    roles     Role[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Profile {
    id        String   @id @default(cuid())
    phone     String
    address   String
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Project {
    id          String   @id @default(cuid())
    name        String
    description String
    price       Float
    dueDate     DateTime
    client      Client   @relation(fields: [clientId], references: [id])
    clientId    String
    developers  User[]
    reports     Report[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
}

model Report {
    id        String   @id @default(cuid())
    timeSpent Int
    date      DateTime
    comment   String
    project   Project  @relation(fields: [projectId], references: [id])
    projectId String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Role {
    id        String        @id @default(cuid())
    name      Enum_RoleName
    users     User[]
    pages     Page[]
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt
}

model User {
    id            String    @id @default(cuid())
    email         String    @unique
    name          String
    image         String?
    emailVerified DateTime?
    profile       Profile?
    role          Role      @relation(fields: [roleId], references: [id])
    roleId        String
    isDeveloperOf Project[]
    reports       Report[]
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    tests         Test?
}

model Test {
    id     String @id
    user   User   @relation(fields: [userId], references: [id])
    userId String @unique
}
