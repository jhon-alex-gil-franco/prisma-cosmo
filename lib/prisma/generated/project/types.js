"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectTypes = void 0;
var apollo_server_micro_1 = require("apollo-server-micro");
var ProjectTypes = (0, apollo_server_micro_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Project {\n    id: ID!\n    name: String!\n    description: String!\n    price: Float!\n    dueDate: DateTime!\n    client: Client!\n    clientId: String!\n    developers: [User]\n    reports: [Report]\n    createdAt: DateTime!\n    updatedAt: DateTime!\n  }\n\n  type Query {\n    getProjects: [Project]\n    getProject(id: String!): Project\n  }\n\n  input InputCreateProject {\n    name: String!\n    description: String!\n    price: Float!\n    dueDate: DateTime!\n    clientId: String!\n  }\n\n  input InputWhereProject {\n    id: String!\n  }\n\n  input InputUpdateProject {\n    name: String\n    description: String\n    price: Float\n    dueDate: DateTime\n    clientId: String\n  }\n\n  type Mutation {\n    createProject(data: InputCreateProject): Project\n\n    updateProject(where: InputWhereProject!, data: InputUpdateProject): Project\n\n    deleteProject(where: InputWhereProject!): Project\n  }\n"], ["\n  type Project {\n    id: ID!\n    name: String!\n    description: String!\n    price: Float!\n    dueDate: DateTime!\n    client: Client!\n    clientId: String!\n    developers: [User]\n    reports: [Report]\n    createdAt: DateTime!\n    updatedAt: DateTime!\n  }\n\n  type Query {\n    getProjects: [Project]\n    getProject(id: String!): Project\n  }\n\n  input InputCreateProject {\n    name: String!\n    description: String!\n    price: Float!\n    dueDate: DateTime!\n    clientId: String!\n  }\n\n  input InputWhereProject {\n    id: String!\n  }\n\n  input InputUpdateProject {\n    name: String\n    description: String\n    price: Float\n    dueDate: DateTime\n    clientId: String\n  }\n\n  type Mutation {\n    createProject(data: InputCreateProject): Project\n\n    updateProject(where: InputWhereProject!, data: InputUpdateProject): Project\n\n    deleteProject(where: InputWhereProject!): Project\n  }\n"])));
exports.ProjectTypes = ProjectTypes;
var templateObject_1;
